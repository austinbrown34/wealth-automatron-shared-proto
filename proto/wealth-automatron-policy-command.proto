syntax = "proto3";

// import "google/protobuf/any.proto";

package wealth_automatron_policy_command;

option csharp_namespace = "Google.Protobuf.WellKnownTypes";
option cc_enable_arenas = true;
option go_package = "google.golang.org/protobuf/types/known/structpb";
option java_package = "com.google.protobuf";
option java_outer_classname = "StructProto";
option java_multiple_files = true;
option objc_class_prefix = "GPB";

// `Struct` represents a structured data value, consisting of fields
// which map to dynamically typed values. In some languages, `Struct`
// might be supported by a native representation. For example, in
// scripting languages like JS a struct is represented as an
// object. The details of that representation are described together
// with the proto support for the language.
//
// The JSON representation for `Struct` is JSON object.
message Struct {
  // Unordered map of dynamically typed values.
  map<string, Value> fields = 1;
}

// `Value` represents a dynamically typed value which can be either
// null, a number, a string, a boolean, a recursive struct value, or a
// list of values. A producer of value is expected to set one of these
// variants. Absence of any variant indicates an error.
//
// The JSON representation for `Value` is JSON value.
message Value {
  // The kind of value.
  oneof kind {
    // Represents a null value.
    // NullValue null_value = 1;
    // Represents a double value.
    double number_value = 2;
    // Represents a string value.
    string string_value = 3;
    // Represents a boolean value.
    bool bool_value = 4;
    // Represents a structured value.
    Struct struct_value = 5;
    // Represents a repeated `Value`.
    ListValue list_value = 6;
  }
}

// `NullValue` is a singleton enumeration to represent the null value for the
// `Value` type union.
//
//  The JSON representation for `NullValue` is JSON `null`.
enum NullValue {
  // Null value.
  NULL_VALUE = 0;
}

// `ListValue` is a wrapper around a repeated field of values.
//
// The JSON representation for `ListValue` is JSON array.
message ListValue {
  // Repeated field of dynamically typed values.
  repeated Value values = 1;
}

// option go_package = "./";

service WealthAutomatronPolicyCommandService {
  rpc CreatePolicy(CreatePolicyRequest) returns (CreatePolicyResponse) {}
  rpc DeletePolicy(DeletePolicyRequest) returns (DeletePolicyResponse) {}
}

// CreatePolicy

message ProviderRequest {
  string network = 1;
  string networkNodeEndpoint = 2;
}

message WalletRequest {
  string key = 1;
  ProviderRequest provider = 2;
}

message FundRequest {
  string address = 1;
  WalletRequest wallet = 2;
}

enum AssetType {
  CRYPTO_TOKEN = 0;
  LIQUIDITY_POSITION = 1;
  DEBT_POSITION = 2;
}

enum WatchType {
  POSITION = 0;
  POOL = 1;
  TOKEN_PAIR = 2;
  TOKEN = 3;
  ENDPOINT = 4;
}

enum ActionType {
  CREATE_LIQUIDITY_POSITION = 0;
  REMOVE_LIQUIDITY_FROM_POSITION = 1;
  ADD_LIQUIDITY_TO_POSITION = 2;
  PURGE_LIQUIDITY_POSITION = 3;
  SUPPLY_ASSET_LIQUIDITY = 4;
  STAKE_ASSET = 5;
  BORROW_AGAINST_ASSET = 6;
  REPAY_ASSET_LOAN = 7;
  SWAP_ASSETS = 8;
  MOVE_ASSET = 9;
  UPDATE_WATCH_ASSETS = 10;
  UPDATE_WATCH_PARAMS = 11;
  UPDATE_WATCH_SCHEDULE = 12;
  REMOVE_WATCH = 13;
}

enum FetchType {
  BOLLINGER = 0;
  FETCH_ENDPOINT = 1;
}

message AssetRequest {
  string identifier = 1;
  AssetType type = 2;
}



// message MyValue {
//   oneof kind {
//     int32 int_value = 1;
//     string string_value = 2;
//   }
// }

message WatchRequest {
  string name = 1;
  WatchType type = 2;
  Struct params = 3;
  repeated AssetRequest assets = 4;
  string schedule = 5;
}

message ActionRequest {
  ActionType type = 1;
  Struct params = 2;
}

message FetchRequest {
  string identifier = 1;
  FetchType type = 2;
  Struct params = 3;
}


message RuleRequest {
  string name = 1;
  Struct conditions = 2;
  repeated ActionRequest actions = 3;
  repeated FetchRequest fetches = 4;
}



message CreatePolicyRequest {
  string name = 1;
  FundRequest fund = 2;
  repeated WatchRequest watches = 3;
  repeated RuleRequest rules = 4;
}

message CreatePolicyResponse {
  int32 status = 1;
  repeated string error = 2;
  string data = 3;
}

// DeletePolicy

message DeletePolicyRequest { string id = 1; }

message DeletePolicyResponse {
  int32 status = 1;
  repeated string error = 2;
}