syntax = "proto3";

package wealth_automatron_policy_command;

option go_package = "./";

service WealthAutomatronPolicyCommandService {
  rpc CreatePolicy(CreatePolicyRequest) returns (CreatePolicyResponse) {}
  rpc DeletePolicy(DeletePolicyRequest) returns (DeletePolicyResponse) {}
}

// CreatePolicy

message ProviderRequest {
  string network = 1;
  string networkNodeEndpoint = 2;
}

message WalletRequest {
  string key = 1;
  ProviderRequest provider = 2;
}

message FundRequest {
  string address = 1;
  WalletRequest wallet = 2;
}

message Dictionary {
  map<string, string> pairs = 1;
}

enum AssetType {
  CRYPTO_TOKEN = 0;
  LIQUIDITY_POSITION = 1;
  DEBT_POSITION = 2;
}

enum WatchType {
  POSITION = 0;
  POOL = 1;
  TOKEN_PAIR = 2;
  TOKEN = 3;
  ENDPOINT = 4;
}

message AssetRequest {
  string identifier = 1;
  AssetType type = 2;
}

message WatchRequest {
  string name = 1;
  WatchType type = 2;
  Dictionary params = 3;
  repeated AssetRequest assets = 4;
  string schedule = 5;
}



message CreatePolicyRequest {
  string name = 1;
  FundRequest fund = 2;
  repeated WatchRequest watches = 3;
}

message CreatePolicyResponse {
  int32 status = 1;
  repeated string error = 2;
  string data = 3;
}

// DeletePolicy

message DeletePolicyRequest { string id = 1; }

message DeletePolicyResponse {
  int32 status = 1;
  repeated string error = 2;
}